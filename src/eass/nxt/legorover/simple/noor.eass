// ----------------------------------------------------------------------------
// Copyright (C) 2013 Louise A. Dennis, and  Michael Fisher 
//
// This file is part of the Lego Rover Library.
// 
// The Lego Rover Library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 3 of the License, or (at your option) any later version.
// 
// The Lego Rover Library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public
// License along with the EASS Library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
// 
// To contact the authors:
// http://www.csc.liv.ac.uk/~lad
//
//----------------------------------------------------------------------------

EASS

:abstraction: noor

:Initial Beliefs:

distance_threshold(50)

:Initial Goals:

:Plans:
/* Default plans for handling messages */
+.received(:tell, B): {True} <- +B;   
+.received(:perform, G): {True} <- +!G [perform];
+.received(:achieve, G): {True} <- +!G [achieve];

+distance(D) : {~B obstacle, B distance_threshold(V), D < V} <- assert_shared(obstacle);
+distance(D) : {B obstacle, B distance_threshold(V), V < D} <- remove_shared(obstacle);

+! stop [perform] : {True} <-
	stop;
+! right90 [perform] : {True} <-
    right90;
+! backward [perform] : {True} <-
    backward;

+change_distance(D) : {B distance_threshold(D1)} <-
    ±distance_threshold(D);

:name: noor

:Initial Beliefs:


:Belief Rules:

:Initial Goals:

start [perform]

:Plans:

+obstacle : {B rule1} <- 
	perf(stop);
+obstacle : {B rule2} <-
    perf(stop),
    perf(right90);
+obstacle : {B rule3} <-
    perf(backward),
    perf(right90);
    
